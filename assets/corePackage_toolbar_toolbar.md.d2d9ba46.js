import{_ as s,o as a,c as o,O as n}from"./chunks/framework.57e84c95.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"corePackage/toolbar/toolbar.md","filePath":"corePackage/toolbar/toolbar.md"}'),l={name:"corePackage/toolbar/toolbar.md"},e=n(`<h2 id="toolbar-vue" tabindex="-1">toolbar.vue <a class="header-anchor" href="#toolbar-vue" aria-label="Permalink to &quot;toolbar.vue&quot;">​</a></h2><p>The Toolbar.vue code is a component that provides a toolbar for the vue3-tiptap-katex editor. The toolbar items are defined within an unordered list (<code>&lt;ul&gt;</code>) and each item is defined within a list item (<code>&lt;li&gt;</code>). Each toolbar item is a div element with a unique ID and a class of toolbar-item. The <code>editor.chain()</code> method is used to create a chain of commands to run on the editor instance. The <code>focus()</code> method is used to focus on the editor instance.</p><p>Finally, a command is run to set the paragraph, toggle bold, italic, or underline styles.</p><h2 id="importing-tippy-js" tabindex="-1">importing tippy.js <a class="header-anchor" href="#importing-tippy-js" aria-label="Permalink to &quot;importing tippy.js&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// for srr support</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> window </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tippy.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">Tippy</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">default</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">isToolbarReady</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$nextTick</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">setAllTooltips</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span></code></pre></div>`,5),p=[e];function t(r,c,i,y,F,D){return a(),o("div",null,p)}const u=s(l,[["render",t]]);export{h as __pageData,u as default};
